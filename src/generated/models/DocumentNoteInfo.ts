/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserPublicInfo } from './UserPublicInfo';
import {
    UserPublicInfoFromJSON,
    UserPublicInfoFromJSONTyped,
    UserPublicInfoToJSON,
    UserPublicInfoToJSONTyped,
} from './UserPublicInfo';

/**
 * 
 * @export
 * @interface DocumentNoteInfo
 */
export interface DocumentNoteInfo {
    /**
     * 
     * @type {number}
     * @memberof DocumentNoteInfo
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentNoteInfo
     */
    content: string;
    /**
     * 
     * @type {UserPublicInfo}
     * @memberof DocumentNoteInfo
     */
    user: UserPublicInfo;
    /**
     * 
     * @type {Date}
     * @memberof DocumentNoteInfo
     */
    create_time: Date;
    /**
     * 
     * @type {Date}
     * @memberof DocumentNoteInfo
     */
    update_time: Date;
}

/**
 * Check if a given object implements the DocumentNoteInfo interface.
 */
export function instanceOfDocumentNoteInfo(value: object): value is DocumentNoteInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('create_time' in value) || value['create_time'] === undefined) return false;
    if (!('update_time' in value) || value['update_time'] === undefined) return false;
    return true;
}

export function DocumentNoteInfoFromJSON(json: any): DocumentNoteInfo {
    return DocumentNoteInfoFromJSONTyped(json, false);
}

export function DocumentNoteInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentNoteInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'user': UserPublicInfoFromJSON(json['user']),
        'create_time': (new Date(json['create_time'])),
        'update_time': (new Date(json['update_time'])),
    };
}

export function DocumentNoteInfoToJSON(json: any): DocumentNoteInfo {
    return DocumentNoteInfoToJSONTyped(json, false);
}

export function DocumentNoteInfoToJSONTyped(value?: DocumentNoteInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content': value['content'],
        'user': UserPublicInfoToJSON(value['user']),
        'create_time': value['create_time'].toISOString(),
        'update_time': value['update_time'].toISOString(),
    };
}

