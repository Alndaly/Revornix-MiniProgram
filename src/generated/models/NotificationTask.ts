/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationSource } from './NotificationSource';
import {
    NotificationSourceFromJSON,
    NotificationSourceFromJSONTyped,
    NotificationSourceToJSON,
    NotificationSourceToJSONTyped,
} from './NotificationSource';
import type { NotificationTarget } from './NotificationTarget';
import {
    NotificationTargetFromJSON,
    NotificationTargetFromJSONTyped,
    NotificationTargetToJSON,
    NotificationTargetToJSONTyped,
} from './NotificationTarget';

/**
 * 
 * @export
 * @interface NotificationTask
 */
export interface NotificationTask {
    /**
     * 
     * @type {number}
     * @memberof NotificationTask
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationTask
     */
    cron_expr: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationTask
     */
    enable: boolean;
    /**
     * 
     * @type {number}
     * @memberof NotificationTask
     */
    notification_source_id: number;
    /**
     * 
     * @type {number}
     * @memberof NotificationTask
     */
    notification_target_id: number;
    /**
     * 
     * @type {number}
     * @memberof NotificationTask
     */
    notification_content_type: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationTask
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NotificationTask
     */
    content?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NotificationTask
     */
    notification_template_id?: number | null;
    /**
     * 
     * @type {NotificationSource}
     * @memberof NotificationTask
     */
    notification_source?: NotificationSource | null;
    /**
     * 
     * @type {NotificationTarget}
     * @memberof NotificationTask
     */
    notification_target?: NotificationTarget | null;
    /**
     * 
     * @type {Date}
     * @memberof NotificationTask
     */
    create_time?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof NotificationTask
     */
    update_time?: Date | null;
}

/**
 * Check if a given object implements the NotificationTask interface.
 */
export function instanceOfNotificationTask(value: object): value is NotificationTask {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('cron_expr' in value) || value['cron_expr'] === undefined) return false;
    if (!('enable' in value) || value['enable'] === undefined) return false;
    if (!('notification_source_id' in value) || value['notification_source_id'] === undefined) return false;
    if (!('notification_target_id' in value) || value['notification_target_id'] === undefined) return false;
    if (!('notification_content_type' in value) || value['notification_content_type'] === undefined) return false;
    return true;
}

export function NotificationTaskFromJSON(json: any): NotificationTask {
    return NotificationTaskFromJSONTyped(json, false);
}

export function NotificationTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTask {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'cron_expr': json['cron_expr'],
        'enable': json['enable'],
        'notification_source_id': json['notification_source_id'],
        'notification_target_id': json['notification_target_id'],
        'notification_content_type': json['notification_content_type'],
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'notification_template_id': json['notification_template_id'] == null ? undefined : json['notification_template_id'],
        'notification_source': json['notification_source'] == null ? undefined : NotificationSourceFromJSON(json['notification_source']),
        'notification_target': json['notification_target'] == null ? undefined : NotificationTargetFromJSON(json['notification_target']),
        'create_time': json['create_time'] == null ? undefined : (new Date(json['create_time'])),
        'update_time': json['update_time'] == null ? undefined : (new Date(json['update_time'])),
    };
}

export function NotificationTaskToJSON(json: any): NotificationTask {
    return NotificationTaskToJSONTyped(json, false);
}

export function NotificationTaskToJSONTyped(value?: NotificationTask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'cron_expr': value['cron_expr'],
        'enable': value['enable'],
        'notification_source_id': value['notification_source_id'],
        'notification_target_id': value['notification_target_id'],
        'notification_content_type': value['notification_content_type'],
        'title': value['title'],
        'content': value['content'],
        'notification_template_id': value['notification_template_id'],
        'notification_source': NotificationSourceToJSON(value['notification_source']),
        'notification_target': NotificationTargetToJSON(value['notification_target']),
        'create_time': value['create_time'] == null ? value['create_time'] : value['create_time'].toISOString(),
        'update_time': value['update_time'] == null ? value['update_time'] : value['update_time'].toISOString(),
    };
}

