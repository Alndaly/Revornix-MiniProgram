/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SectionUserAddRequest
 */
export interface SectionUserAddRequest {
    /**
     * 
     * @type {number}
     * @memberof SectionUserAddRequest
     */
    section_id: number;
    /**
     * 
     * @type {number}
     * @memberof SectionUserAddRequest
     */
    user_id: number;
    /**
     * 
     * @type {number}
     * @memberof SectionUserAddRequest
     */
    authority: number;
}

/**
 * Check if a given object implements the SectionUserAddRequest interface.
 */
export function instanceOfSectionUserAddRequest(value: object): value is SectionUserAddRequest {
    if (!('section_id' in value) || value['section_id'] === undefined) return false;
    if (!('user_id' in value) || value['user_id'] === undefined) return false;
    if (!('authority' in value) || value['authority'] === undefined) return false;
    return true;
}

export function SectionUserAddRequestFromJSON(json: any): SectionUserAddRequest {
    return SectionUserAddRequestFromJSONTyped(json, false);
}

export function SectionUserAddRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SectionUserAddRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'section_id': json['section_id'],
        'user_id': json['user_id'],
        'authority': json['authority'],
    };
}

export function SectionUserAddRequestToJSON(json: any): SectionUserAddRequest {
    return SectionUserAddRequestToJSONTyped(json, false);
}

export function SectionUserAddRequestToJSONTyped(value?: SectionUserAddRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'section_id': value['section_id'],
        'user_id': value['user_id'],
        'authority': value['authority'],
    };
}

