/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentUpdateRequest
 */
export interface DocumentUpdateRequest {
    /**
     * 
     * @type {number}
     * @memberof DocumentUpdateRequest
     */
    document_id: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentUpdateRequest
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentUpdateRequest
     */
    cover?: string | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof DocumentUpdateRequest
     */
    labels?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof DocumentUpdateRequest
     */
    sections?: Array<number> | null;
}

/**
 * Check if a given object implements the DocumentUpdateRequest interface.
 */
export function instanceOfDocumentUpdateRequest(value: object): value is DocumentUpdateRequest {
    if (!('document_id' in value) || value['document_id'] === undefined) return false;
    return true;
}

export function DocumentUpdateRequestFromJSON(json: any): DocumentUpdateRequest {
    return DocumentUpdateRequestFromJSONTyped(json, false);
}

export function DocumentUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'document_id': json['document_id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'cover': json['cover'] == null ? undefined : json['cover'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'sections': json['sections'] == null ? undefined : json['sections'],
    };
}

export function DocumentUpdateRequestToJSON(json: any): DocumentUpdateRequest {
    return DocumentUpdateRequestToJSONTyped(json, false);
}

export function DocumentUpdateRequestToJSONTyped(value?: DocumentUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document_id': value['document_id'],
        'title': value['title'],
        'description': value['description'],
        'cover': value['cover'],
        'labels': value['labels'],
        'sections': value['sections'],
    };
}

