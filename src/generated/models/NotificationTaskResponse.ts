/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationTask } from './NotificationTask';
import {
    NotificationTaskFromJSON,
    NotificationTaskFromJSONTyped,
    NotificationTaskToJSON,
    NotificationTaskToJSONTyped,
} from './NotificationTask';

/**
 * 
 * @export
 * @interface NotificationTaskResponse
 */
export interface NotificationTaskResponse {
    /**
     * 
     * @type {Array<NotificationTask>}
     * @memberof NotificationTaskResponse
     */
    data: Array<NotificationTask>;
}

/**
 * Check if a given object implements the NotificationTaskResponse interface.
 */
export function instanceOfNotificationTaskResponse(value: object): value is NotificationTaskResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function NotificationTaskResponseFromJSON(json: any): NotificationTaskResponse {
    return NotificationTaskResponseFromJSONTyped(json, false);
}

export function NotificationTaskResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTaskResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(NotificationTaskFromJSON)),
    };
}

export function NotificationTaskResponseToJSON(json: any): NotificationTaskResponse {
    return NotificationTaskResponseToJSONTyped(json, false);
}

export function NotificationTaskResponseToJSONTyped(value?: NotificationTaskResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(NotificationTaskToJSON)),
    };
}

