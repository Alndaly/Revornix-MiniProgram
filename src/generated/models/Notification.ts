/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {number}
     * @memberof Notification
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof Notification
     */
    read_at?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Notification
     */
    create_time?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Notification
     */
    update_time?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    link?: string | null;
}

/**
 * Check if a given object implements the Notification interface.
 */
export function instanceOfNotification(value: object): value is Notification {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'content': json['content'],
        'read_at': json['read_at'] == null ? undefined : (new Date(json['read_at'])),
        'create_time': json['create_time'] == null ? undefined : (new Date(json['create_time'])),
        'update_time': json['update_time'] == null ? undefined : (new Date(json['update_time'])),
        'link': json['link'] == null ? undefined : json['link'],
    };
}

export function NotificationToJSON(json: any): Notification {
    return NotificationToJSONTyped(json, false);
}

export function NotificationToJSONTyped(value?: Notification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'content': value['content'],
        'read_at': value['read_at'] == null ? undefined : ((value['read_at'] as any).toISOString()),
        'create_time': value['create_time'] == null ? undefined : ((value['create_time'] as any).toISOString()),
        'update_time': value['update_time'] == null ? undefined : ((value['update_time'] as any).toISOString()),
        'link': value['link'],
    };
}

