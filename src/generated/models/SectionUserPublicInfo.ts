/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SectionUserPublicInfo
 */
export interface SectionUserPublicInfo {
    /**
     * 
     * @type {number}
     * @memberof SectionUserPublicInfo
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof SectionUserPublicInfo
     */
    nickname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SectionUserPublicInfo
     */
    avatar?: string;
    /**
     * 
     * @type {string}
     * @memberof SectionUserPublicInfo
     */
    slogan?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SectionUserPublicInfo
     */
    authority?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SectionUserPublicInfo
     */
    role?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof SectionUserPublicInfo
     */
    create_time: Date;
    /**
     * 
     * @type {Date}
     * @memberof SectionUserPublicInfo
     */
    update_time: Date;
}

/**
 * Check if a given object implements the SectionUserPublicInfo interface.
 */
export function instanceOfSectionUserPublicInfo(value: object): value is SectionUserPublicInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('create_time' in value) || value['create_time'] === undefined) return false;
    if (!('update_time' in value) || value['update_time'] === undefined) return false;
    return true;
}

export function SectionUserPublicInfoFromJSON(json: any): SectionUserPublicInfo {
    return SectionUserPublicInfoFromJSONTyped(json, false);
}

export function SectionUserPublicInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SectionUserPublicInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'slogan': json['slogan'] == null ? undefined : json['slogan'],
        'authority': json['authority'] == null ? undefined : json['authority'],
        'role': json['role'] == null ? undefined : json['role'],
        'create_time': (new Date(json['create_time'])),
        'update_time': (new Date(json['update_time'])),
    };
}

export function SectionUserPublicInfoToJSON(json: any): SectionUserPublicInfo {
    return SectionUserPublicInfoToJSONTyped(json, false);
}

export function SectionUserPublicInfoToJSONTyped(value?: SectionUserPublicInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nickname': value['nickname'],
        'avatar': value['avatar'],
        'slogan': value['slogan'],
        'authority': value['authority'],
        'role': value['role'],
        'create_time': value['create_time'].toISOString(),
        'update_time': value['update_time'].toISOString(),
    };
}

