/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentGraphTask } from './DocumentGraphTask';
import {
    DocumentGraphTaskFromJSON,
    DocumentGraphTaskFromJSONTyped,
    DocumentGraphTaskToJSON,
    DocumentGraphTaskToJSONTyped,
} from './DocumentGraphTask';
import type { DocumentEmbeddingTask } from './DocumentEmbeddingTask';
import {
    DocumentEmbeddingTaskFromJSON,
    DocumentEmbeddingTaskFromJSONTyped,
    DocumentEmbeddingTaskToJSON,
    DocumentEmbeddingTaskToJSONTyped,
} from './DocumentEmbeddingTask';
import type { DocumentTransformTask } from './DocumentTransformTask';
import {
    DocumentTransformTaskFromJSON,
    DocumentTransformTaskFromJSONTyped,
    DocumentTransformTaskToJSON,
    DocumentTransformTaskToJSONTyped,
} from './DocumentTransformTask';
import type { Label } from './Label';
import {
    LabelFromJSON,
    LabelFromJSONTyped,
    LabelToJSON,
    LabelToJSONTyped,
} from './Label';
import type { DocumentProcessTask } from './DocumentProcessTask';
import {
    DocumentProcessTaskFromJSON,
    DocumentProcessTaskFromJSONTyped,
    DocumentProcessTaskToJSON,
    DocumentProcessTaskToJSONTyped,
} from './DocumentProcessTask';
import type { UserPublicInfo } from './UserPublicInfo';
import {
    UserPublicInfoFromJSON,
    UserPublicInfoFromJSONTyped,
    UserPublicInfoToJSON,
    UserPublicInfoToJSONTyped,
} from './UserPublicInfo';
import type { QuickNoteDocumentInfo } from './QuickNoteDocumentInfo';
import {
    QuickNoteDocumentInfoFromJSON,
    QuickNoteDocumentInfoFromJSONTyped,
    QuickNoteDocumentInfoToJSON,
    QuickNoteDocumentInfoToJSONTyped,
} from './QuickNoteDocumentInfo';
import type { WebsiteDocumentInfo } from './WebsiteDocumentInfo';
import {
    WebsiteDocumentInfoFromJSON,
    WebsiteDocumentInfoFromJSONTyped,
    WebsiteDocumentInfoToJSON,
    WebsiteDocumentInfoToJSONTyped,
} from './WebsiteDocumentInfo';
import type { SchemasDocumentBaseSectionInfo } from './SchemasDocumentBaseSectionInfo';
import {
    SchemasDocumentBaseSectionInfoFromJSON,
    SchemasDocumentBaseSectionInfoFromJSONTyped,
    SchemasDocumentBaseSectionInfoToJSON,
    SchemasDocumentBaseSectionInfoToJSONTyped,
} from './SchemasDocumentBaseSectionInfo';
import type { FileDocumentInfo } from './FileDocumentInfo';
import {
    FileDocumentInfoFromJSON,
    FileDocumentInfoFromJSONTyped,
    FileDocumentInfoToJSON,
    FileDocumentInfoToJSONTyped,
} from './FileDocumentInfo';

/**
 * 
 * @export
 * @interface DocumentDetailResponse
 */
export interface DocumentDetailResponse {
    /**
     * 
     * @type {number}
     * @memberof DocumentDetailResponse
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetailResponse
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetailResponse
     */
    ai_summary?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetailResponse
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetailResponse
     */
    cover?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DocumentDetailResponse
     */
    category?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentDetailResponse
     */
    create_time?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentDetailResponse
     */
    update_time?: Date | null;
    /**
     * 
     * @type {Array<Label>}
     * @memberof DocumentDetailResponse
     */
    labels?: Array<Label> | null;
    /**
     * 
     * @type {UserPublicInfo}
     * @memberof DocumentDetailResponse
     */
    creator?: UserPublicInfo | null;
    /**
     * 
     * @type {Array<SchemasDocumentBaseSectionInfo>}
     * @memberof DocumentDetailResponse
     */
    sections?: Array<SchemasDocumentBaseSectionInfo> | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetailResponse
     */
    from_plat?: string | null;
    /**
     * 
     * @type {Array<UserPublicInfo>}
     * @memberof DocumentDetailResponse
     */
    users?: Array<UserPublicInfo> | null;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentDetailResponse
     */
    is_star?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentDetailResponse
     */
    is_read?: boolean | null;
    /**
     * 
     * @type {WebsiteDocumentInfo}
     * @memberof DocumentDetailResponse
     */
    website_info?: WebsiteDocumentInfo | null;
    /**
     * 
     * @type {FileDocumentInfo}
     * @memberof DocumentDetailResponse
     */
    file_info?: FileDocumentInfo | null;
    /**
     * 
     * @type {QuickNoteDocumentInfo}
     * @memberof DocumentDetailResponse
     */
    quick_note_info?: QuickNoteDocumentInfo | null;
    /**
     * 
     * @type {DocumentTransformTask}
     * @memberof DocumentDetailResponse
     */
    transform_task?: DocumentTransformTask | null;
    /**
     * 
     * @type {DocumentEmbeddingTask}
     * @memberof DocumentDetailResponse
     */
    embedding_task?: DocumentEmbeddingTask | null;
    /**
     * 
     * @type {DocumentGraphTask}
     * @memberof DocumentDetailResponse
     */
    graph_task?: DocumentGraphTask | null;
    /**
     * 
     * @type {DocumentProcessTask}
     * @memberof DocumentDetailResponse
     */
    process_task?: DocumentProcessTask | null;
}

/**
 * Check if a given object implements the DocumentDetailResponse interface.
 */
export function instanceOfDocumentDetailResponse(value: object): value is DocumentDetailResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function DocumentDetailResponseFromJSON(json: any): DocumentDetailResponse {
    return DocumentDetailResponseFromJSONTyped(json, false);
}

export function DocumentDetailResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentDetailResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'ai_summary': json['ai_summary'] == null ? undefined : json['ai_summary'],
        'description': json['description'] == null ? undefined : json['description'],
        'cover': json['cover'] == null ? undefined : json['cover'],
        'category': json['category'] == null ? undefined : json['category'],
        'create_time': json['create_time'] == null ? undefined : (new Date(json['create_time'])),
        'update_time': json['update_time'] == null ? undefined : (new Date(json['update_time'])),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelFromJSON)),
        'creator': json['creator'] == null ? undefined : UserPublicInfoFromJSON(json['creator']),
        'sections': json['sections'] == null ? undefined : ((json['sections'] as Array<any>).map(SchemasDocumentBaseSectionInfoFromJSON)),
        'from_plat': json['from_plat'] == null ? undefined : json['from_plat'],
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserPublicInfoFromJSON)),
        'is_star': json['is_star'] == null ? undefined : json['is_star'],
        'is_read': json['is_read'] == null ? undefined : json['is_read'],
        'website_info': json['website_info'] == null ? undefined : WebsiteDocumentInfoFromJSON(json['website_info']),
        'file_info': json['file_info'] == null ? undefined : FileDocumentInfoFromJSON(json['file_info']),
        'quick_note_info': json['quick_note_info'] == null ? undefined : QuickNoteDocumentInfoFromJSON(json['quick_note_info']),
        'transform_task': json['transform_task'] == null ? undefined : DocumentTransformTaskFromJSON(json['transform_task']),
        'embedding_task': json['embedding_task'] == null ? undefined : DocumentEmbeddingTaskFromJSON(json['embedding_task']),
        'graph_task': json['graph_task'] == null ? undefined : DocumentGraphTaskFromJSON(json['graph_task']),
        'process_task': json['process_task'] == null ? undefined : DocumentProcessTaskFromJSON(json['process_task']),
    };
}

export function DocumentDetailResponseToJSON(json: any): DocumentDetailResponse {
    return DocumentDetailResponseToJSONTyped(json, false);
}

export function DocumentDetailResponseToJSONTyped(value?: DocumentDetailResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'ai_summary': value['ai_summary'],
        'description': value['description'],
        'cover': value['cover'],
        'category': value['category'],
        'create_time': value['create_time'] == null ? value['create_time'] : value['create_time'].toISOString(),
        'update_time': value['update_time'] == null ? value['update_time'] : value['update_time'].toISOString(),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelToJSON)),
        'creator': UserPublicInfoToJSON(value['creator']),
        'sections': value['sections'] == null ? undefined : ((value['sections'] as Array<any>).map(SchemasDocumentBaseSectionInfoToJSON)),
        'from_plat': value['from_plat'],
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserPublicInfoToJSON)),
        'is_star': value['is_star'],
        'is_read': value['is_read'],
        'website_info': WebsiteDocumentInfoToJSON(value['website_info']),
        'file_info': FileDocumentInfoToJSON(value['file_info']),
        'quick_note_info': QuickNoteDocumentInfoToJSON(value['quick_note_info']),
        'transform_task': DocumentTransformTaskToJSON(value['transform_task']),
        'embedding_task': DocumentEmbeddingTaskToJSON(value['embedding_task']),
        'graph_task': DocumentGraphTaskToJSON(value['graph_task']),
        'process_task': DocumentProcessTaskToJSON(value['process_task']),
    };
}

