/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationSource } from './NotificationSource';
import {
    NotificationSourceFromJSON,
    NotificationSourceFromJSONTyped,
    NotificationSourceToJSON,
    NotificationSourceToJSONTyped,
} from './NotificationSource';

/**
 * 
 * @export
 * @interface NotificationSourcesResponse
 */
export interface NotificationSourcesResponse {
    /**
     * 
     * @type {Array<NotificationSource>}
     * @memberof NotificationSourcesResponse
     */
    data: Array<NotificationSource>;
}

/**
 * Check if a given object implements the NotificationSourcesResponse interface.
 */
export function instanceOfNotificationSourcesResponse(value: object): value is NotificationSourcesResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function NotificationSourcesResponseFromJSON(json: any): NotificationSourcesResponse {
    return NotificationSourcesResponseFromJSONTyped(json, false);
}

export function NotificationSourcesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationSourcesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(NotificationSourceFromJSON)),
    };
}

export function NotificationSourcesResponseToJSON(json: any): NotificationSourcesResponse {
    return NotificationSourcesResponseToJSONTyped(json, false);
}

export function NotificationSourcesResponseToJSONTyped(value?: NotificationSourcesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(NotificationSourceToJSON)),
    };
}

