/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface S3PresignUploadURLResponse
 */
export interface S3PresignUploadURLResponse {
    /**
     * 
     * @type {string}
     * @memberof S3PresignUploadURLResponse
     */
    upload_url: string;
    /**
     * 
     * @type {string}
     * @memberof S3PresignUploadURLResponse
     */
    file_path: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof S3PresignUploadURLResponse
     */
    fields: { [key: string]: any; };
    /**
     * 
     * @type {Date}
     * @memberof S3PresignUploadURLResponse
     */
    expiration: Date;
}

/**
 * Check if a given object implements the S3PresignUploadURLResponse interface.
 */
export function instanceOfS3PresignUploadURLResponse(value: object): value is S3PresignUploadURLResponse {
    if (!('upload_url' in value) || value['upload_url'] === undefined) return false;
    if (!('file_path' in value) || value['file_path'] === undefined) return false;
    if (!('fields' in value) || value['fields'] === undefined) return false;
    if (!('expiration' in value) || value['expiration'] === undefined) return false;
    return true;
}

export function S3PresignUploadURLResponseFromJSON(json: any): S3PresignUploadURLResponse {
    return S3PresignUploadURLResponseFromJSONTyped(json, false);
}

export function S3PresignUploadURLResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): S3PresignUploadURLResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'upload_url': json['upload_url'],
        'file_path': json['file_path'],
        'fields': json['fields'],
        'expiration': (new Date(json['expiration'])),
    };
}

export function S3PresignUploadURLResponseToJSON(json: any): S3PresignUploadURLResponse {
    return S3PresignUploadURLResponseToJSONTyped(json, false);
}

export function S3PresignUploadURLResponseToJSONTyped(value?: S3PresignUploadURLResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'upload_url': value['upload_url'],
        'file_path': value['file_path'],
        'fields': value['fields'],
        'expiration': value['expiration'].toISOString(),
    };
}

