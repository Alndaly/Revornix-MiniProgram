/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelProvider } from './ModelProvider';
import {
    ModelProviderFromJSON,
    ModelProviderFromJSONTyped,
    ModelProviderToJSON,
    ModelProviderToJSONTyped,
} from './ModelProvider';

/**
 * 
 * @export
 * @interface ModelProviderSearchResponse
 */
export interface ModelProviderSearchResponse {
    /**
     * 
     * @type {Array<ModelProvider>}
     * @memberof ModelProviderSearchResponse
     */
    data?: Array<ModelProvider> | null;
}

/**
 * Check if a given object implements the ModelProviderSearchResponse interface.
 */
export function instanceOfModelProviderSearchResponse(value: object): value is ModelProviderSearchResponse {
    return true;
}

export function ModelProviderSearchResponseFromJSON(json: any): ModelProviderSearchResponse {
    return ModelProviderSearchResponseFromJSONTyped(json, false);
}

export function ModelProviderSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelProviderSearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(ModelProviderFromJSON)),
    };
}

export function ModelProviderSearchResponseToJSON(json: any): ModelProviderSearchResponse {
    return ModelProviderSearchResponseToJSONTyped(json, false);
}

export function ModelProviderSearchResponseToJSONTyped(value?: ModelProviderSearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(ModelProviderToJSON)),
    };
}

