/* tslint:disable */
/* eslint-disable */
/**
 * Link Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SectionCommentInfo } from './SectionCommentInfo';
import {
    SectionCommentInfoFromJSON,
    SectionCommentInfoFromJSONTyped,
    SectionCommentInfoToJSON,
    SectionCommentInfoToJSONTyped,
} from './SectionCommentInfo';

/**
 * 
 * @export
 * @interface PaginationSectionCommentInfo
 */
export interface PaginationSectionCommentInfo {
    /**
     * 
     * @type {number}
     * @memberof PaginationSectionCommentInfo
     */
    total_elements: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationSectionCommentInfo
     */
    current_page_elements: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationSectionCommentInfo
     */
    total_pages: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationSectionCommentInfo
     */
    page_num: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationSectionCommentInfo
     */
    page_size: number;
    /**
     * 
     * @type {Array<SectionCommentInfo>}
     * @memberof PaginationSectionCommentInfo
     */
    elements: Array<SectionCommentInfo>;
}

/**
 * Check if a given object implements the PaginationSectionCommentInfo interface.
 */
export function instanceOfPaginationSectionCommentInfo(value: object): value is PaginationSectionCommentInfo {
    if (!('total_elements' in value) || value['total_elements'] === undefined) return false;
    if (!('current_page_elements' in value) || value['current_page_elements'] === undefined) return false;
    if (!('total_pages' in value) || value['total_pages'] === undefined) return false;
    if (!('page_num' in value) || value['page_num'] === undefined) return false;
    if (!('page_size' in value) || value['page_size'] === undefined) return false;
    if (!('elements' in value) || value['elements'] === undefined) return false;
    return true;
}

export function PaginationSectionCommentInfoFromJSON(json: any): PaginationSectionCommentInfo {
    return PaginationSectionCommentInfoFromJSONTyped(json, false);
}

export function PaginationSectionCommentInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginationSectionCommentInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'total_elements': json['total_elements'],
        'current_page_elements': json['current_page_elements'],
        'total_pages': json['total_pages'],
        'page_num': json['page_num'],
        'page_size': json['page_size'],
        'elements': ((json['elements'] as Array<any>).map(SectionCommentInfoFromJSON)),
    };
}

export function PaginationSectionCommentInfoToJSON(json: any): PaginationSectionCommentInfo {
    return PaginationSectionCommentInfoToJSONTyped(json, false);
}

export function PaginationSectionCommentInfoToJSONTyped(value?: PaginationSectionCommentInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_elements': value['total_elements'],
        'current_page_elements': value['current_page_elements'],
        'total_pages': value['total_pages'],
        'page_num': value['page_num'],
        'page_size': value['page_size'],
        'elements': ((value['elements'] as Array<any>).map(SectionCommentInfoToJSON)),
    };
}

