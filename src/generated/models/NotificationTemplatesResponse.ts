/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationTemplate } from './NotificationTemplate';
import {
    NotificationTemplateFromJSON,
    NotificationTemplateFromJSONTyped,
    NotificationTemplateToJSON,
    NotificationTemplateToJSONTyped,
} from './NotificationTemplate';

/**
 * 
 * @export
 * @interface NotificationTemplatesResponse
 */
export interface NotificationTemplatesResponse {
    /**
     * 
     * @type {Array<NotificationTemplate>}
     * @memberof NotificationTemplatesResponse
     */
    data: Array<NotificationTemplate>;
}

/**
 * Check if a given object implements the NotificationTemplatesResponse interface.
 */
export function instanceOfNotificationTemplatesResponse(value: object): value is NotificationTemplatesResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function NotificationTemplatesResponseFromJSON(json: any): NotificationTemplatesResponse {
    return NotificationTemplatesResponseFromJSONTyped(json, false);
}

export function NotificationTemplatesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTemplatesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(NotificationTemplateFromJSON)),
    };
}

export function NotificationTemplatesResponseToJSON(json: any): NotificationTemplatesResponse {
    return NotificationTemplatesResponseToJSONTyped(json, false);
}

export function NotificationTemplatesResponseToJSONTyped(value?: NotificationTemplatesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(NotificationTemplateToJSON)),
    };
}

